name: CI

on:
    workflow_dispatch:
    push:
        branches:
            - 'main'
    pull_request:
        types: [opened, synchronize]
        branches:
            - 'main'

concurrency: ci-${{ github.ref_name }}

env:
    NODE_VERSION: 20
    PNPM_VERSION: 8
    COMMIT_SHA: ${{ github.event.pull_request.head.sha || github.sha }}
    BRANCH_OR_TAG: ${{ github.event.pull_request.head.ref || github.ref_name }}
    IS_MAIN: ${{ github.ref_name == 'main' }}
    IS_PULL_REQUEST: ${{ github.event_name == 'pull_request' }}

jobs:
    check:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v3
              timeout-minutes: 2

            - name: Set up pnpm
              uses: pnpm/action-setup@v2
              timeout-minutes: 2
              with:
                  version: ${{ env.PNPM_VERSION }}

            - name: Set up Node.js
              uses: actions/setup-node@v3
              timeout-minutes: 2
              with:
                  node-version: ${{ env.NODE_VERSION }}
                  cache: pnpm
                  cache-dependency-path: pnpm-lock.yaml

            - name: Get pnpm store directory
              id: pnpm-store
              timeout-minutes: 2
              run: |
                  echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

            - name: Restore pnpm cache
              uses: actions/cache@v3
              timeout-minutes: 2
              with:
                  path: ${{ steps.pnpm-store.outputs.STORE_PATH }}
                  key: ${{ runner.os }}-node-${{ env.NODE_VERSION }}-pnpm-${{ env.PNPM_VERSION }}-store-${{ hashFiles('pnpm-lock.yaml') }}
                  restore-keys: |
                      ${{ runner.os }}-node-${{ env.NODE_VERSION }}-pnpm-${{ env.PNPM_VERSION }}-store-

            - name: Install NPM dependencies
              timeout-minutes: 2
              run: |
                  pnpm install --frozen-lockfile

            - name: Build TypeScript
              timeout-minutes: 2
              run: |
                  pnpm run build

            - name: Run tests
              timeout-minutes: 2
              run: |
                  pnpm test

            - name: Check format & lint errors
              timeout-minutes: 2
              run: |
                  pnpm lint:check
